

data ingestion with splits >> Preprocessing with derieved vars >>   


# read cpa from preprocess data and add to augment data


if len(predictor_names) == len(predictors):
        training_predictors = train_data.get("predictors") #train_npz[:, train_predictor_positions]
    else:
        for p in predictors:
            if p not in predictor_names:
                logger.warning(f"Predictor {p} is not a valid predictor name in data.")
        
        if training_predictors.shape[1] > len(predictors):
            if predictor_names[-1] in predictors:
                pred_index = predictor_names.index(predictor_names[-1])
                tailing_predictors = training_predictors[:, pred_index:]
            








I want incorporate Mlflow into my ModelTrainer or what do you suggest and how to go about it. It will be part of my pipeline, to help implement my architecture i share earlier. should it be part of the modeltrainer or it has to be outside somewhere, maybe as a separate module or docker container. i want to incoporate it in such a way that it is scalable and follows industry standard in by kubeflow. take a look at the ModelTrainer and how it was used:                            
